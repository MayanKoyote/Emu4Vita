TARGET = libminizip

MAKEFILE_PATH              := $(abspath $(lastword $(MAKEFILE_LIST)))
MAKEFILE_DIR               := $(dir $(MAKEFILE_PATH))
ROOT_DIR                   := $(patsubst %/,%, $(MAKEFILE_DIR))

DEPS_DIR                   := $(ROOT_DIR)/../DEPS
SRC_DIR                    := $(DEPS_DIR)/minizip
BUILD_DIR                  := $(ROOT_DIR)/../build/$(TARGET)

EXPORTS_DIR                := $(ROOT_DIR)/imports
EXPORTS_LIB_DIR            := $(EXPORTS_DIR)/lib
EXPORTS_INCLUDE_DIR        := $(EXPORTS_DIR)/include

TARGET_PATH                := $(BUILD_DIR)/$(TARGET).a

LIBDIRS := 

INCDIRS := \
	-I$(DEPS_DIR) \
	-I$(SRC_DIR)

SRC_C += \
	zip.c

OBJS := $(SRC_C:.c=.o)
OBJS := $(addprefix $(BUILD_DIR)/, $(OBJS))

DEFINES := 

WARNINGS := \
	-Wall

ARCHFLAGS := -marm -mcpu=cortex-a9 -mfpu=neon -mfloat-abi=hard -DVITA
CFLAGS    += $(ARCHFLAGS) -mword-relocations -fno-optimize-sibling-calls
CFLAGS    += -fomit-frame-pointer -fno-unwind-tables -fno-asynchronous-unwind-tables -ftree-vectorize
CFLAGS    += -O3
ASFLAGS   := $(CFLAGS) $(WARNINGS) $(INCDIRS)

CFLAGS    += -ffast-math $(WARNINGS) $(INCDIRS) $(DEFINES)
CXXFLAGS  := $(CFLAGS) -fno-rtti -fno-exceptions
LDFLAGS   := -Wl,-q $(LIBDIRS)

PREFIX  := arm-vita-eabi
CC      := $(PREFIX)-gcc
CXX     := $(PREFIX)-g++
AS      := $(PREFIX)-as
AR      := $(PREFIX)-ar
OBJCOPY := $(PREFIX)-objcopy
STRIP   := $(PREFIX)-strip
NM      := $(PREFIX)-nm
LD      := $(CXX)

all: $(TARGET_PATH) install

install:
	@mkdir -p $(EXPORTS_LIB_DIR)
	@cp -u $(TARGET_PATH) $(EXPORTS_LIB_DIR)

uninstall:
	@rm $(EXPORTS_LIB_DIR)/$(TARGET).a

$(TARGET_PATH): $(OBJS)
	@mkdir -p $(dir $@)
	$(AR) -rc $@ $^

$(BUILD_DIR)/%.o: $(SRC_DIR)/%.cpp
	@mkdir -p $(dir $@)
	$(CXX) -c $(CXXFLAGS) $< -o $@

$(BUILD_DIR)/%.o: $(SRC_DIR)/%.c
	@mkdir -p $(dir $@)
	$(CC) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/%.o: $(SRC_DIR)/%.S
	@mkdir -p $(dir $@)
	$(CC) -c $(ASFLAGS) $< -o $@

$(BUILD_DIR)/%.o: $(SRC_DIR)/%.s
	@mkdir -p $(dir $@)
	$(CC) -c $(ASFLAGS) $< -o $@

clean: uninstall
	rm -rf $(BUILD_DIR) $(TARGET_PATH)

.PHONY: clean all
	